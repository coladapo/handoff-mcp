import { useState, useEffect } from 'react'
import { api } from '../services/api'

interface UseApiOptions {
  immediate?: boolean
}

export function useApi<T>(
  url: string,
  options: UseApiOptions = { immediate: true }
) {
  const [data, setData] = useState<T | null>(null)
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<Error | null>(null)

  const fetchData = async () => {
    setLoading(true)
    setError(null)
    
    try {
      const response = await api.get<T>(url)
      setData(response.data)
    } catch (err) {
      setError(err instanceof Error ? err : new Error('Unknown error'))
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    if (options.immediate) {
      fetchData()
    }
  }, [url])

  return { data, loading, error, refetch: fetchData }
}