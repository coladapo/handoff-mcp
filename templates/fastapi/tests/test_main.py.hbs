import pytest
from httpx import AsyncClient
from src.main import app


@pytest.mark.asyncio
async def test_root():
    """Test root endpoint."""
    async with AsyncClient(app=app, base_url="http://test") as client:
        response = await client.get("/")
    
    assert response.status_code == 200
    data = response.json()
    assert "message" in data
    assert "version" in data
    assert data["version"] == "{{version}}"


@pytest.mark.asyncio
async def test_health_check():
    """Test health check endpoint."""
    async with AsyncClient(app=app, base_url="http://test") as client:
        response = await client.get("/health")
    
    assert response.status_code == 200
    data = response.json()
    assert data["status"] == "healthy"
    assert "timestamp" in data
    assert data["service"] == "{{projectName}}"
    assert data["version"] == "{{version}}"


{{#if (includes codeHints.patterns 'crud')}}
@pytest.mark.asyncio
async def test_create_item():
    """Test creating an item."""
    async with AsyncClient(app=app, base_url="http://test") as client:
        response = await client.post(
            "/api/v1/items",
            json={"name": "Test Item", "description": "Test Description"}
        )
    
    assert response.status_code == 201
    data = response.json()
    assert data["name"] == "Test Item"
    assert data["description"] == "Test Description"
    assert "id" in data
    assert "created_at" in data


@pytest.mark.asyncio
async def test_list_items():
    """Test listing items."""
    async with AsyncClient(app=app, base_url="http://test") as client:
        # Create an item first
        await client.post(
            "/api/v1/items",
            json={"name": "Test Item", "description": "Test Description"}
        )
        
        # List items
        response = await client.get("/api/v1/items")
    
    assert response.status_code == 200
    data = response.json()
    assert isinstance(data, list)
    assert len(data) > 0


@pytest.mark.asyncio
async def test_get_item_not_found():
    """Test getting non-existent item."""
    async with AsyncClient(app=app, base_url="http://test") as client:
        response = await client.get("/api/v1/items/999")
    
    assert response.status_code == 404
    assert response.json()["detail"] == "Item not found"
{{/if}}